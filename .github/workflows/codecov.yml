name: Codecov

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -e ".[dev]"
        
    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_ALGORITHM: HS256
        PUBLISHING_SERVICE_API_KEY: ${{ secrets.PUBLISHING_SERVICE_API_KEY }}
        PUBLISHING_SERVICE_URL: ${{ secrets.PUBLISHING_SERVICE_URL }}
        STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
        STORAGE_REGION: ${{ secrets.STORAGE_REGION }}
      run: |
        cd backend
        pytest --cov=. --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: true

  frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run tests with coverage
      run: |
        cd frontend
        npm test -- --coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        directory: ./frontend/coverage
        fail_ci_if_error: true 