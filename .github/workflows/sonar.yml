name: SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          cd backend
          pip install -e ".[dev]"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run backend tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ALGORITHM: HS256
          PUBLISHING_SERVICE_API_KEY: ${{ secrets.PUBLISHING_SERVICE_API_KEY }}
          PUBLISHING_SERVICE_URL: ${{ secrets.PUBLISHING_SERVICE_URL }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          STORAGE_REGION: ${{ secrets.STORAGE_REGION }}
        run: |
          cd backend
          pytest --cov=. --cov-report=xml

      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 